# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
defaults:
  run:
    working-directory: nether
    
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    - name: Generate deployment package
      run: zip -r deploy.zip * -x "**node_modules**" -x '*.git*'
    
    - name: DEBUG LS
      run: ls
      
    - name: Beanstalk Deploy
      # You may pin to the exact commit or the version.
      # uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
      uses: einaregilsson/beanstalk-deploy@v16
      with:
        # AWS Access Key
        aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
        # AWS Secret Key
        aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
        # AWS Region
        region: us-east-2
        # Beanstalk application name
        application_name: nether-web
        # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
        environment_name: nether-web
        # Version label for new Beanstalk version
        version_label: ${{ github.sha }}
        # Zip file with the version to deploy. If skipped the action will deploy existing version.
        deployment_package: nether/deploy.zip
    
